name: Build and Package

on:
  push:
    branches:
      - stagging
  pull_request:
    branches:
      - stagging

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run jpackage
        run: ./gradlew jpackage

      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.os }}
          path: build/jpackage/**

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.22+4
          release_name: Release v0.0.22+4
          draft: false
          prerelease: true

      - name: Download Windows package
        uses: actions/download-artifact@v3
        with:
          name: app-windows-latest
          path: ./artifacts/windows

      - name: Upload Windows package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/*
          asset_name: OpenCore_v0.0.22.4-windows.msi
          asset_content_type: application/octet-stream

      - name: Download macOS package
        uses: actions/download-artifact@v3
        with:
          name: app-macos-latest
          path: ./artifacts/macos

      - name: Upload macOS package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/*
          asset_name: OpenCore_v0.0.22.4-macos.dmg
          asset_content_type: application/octet-stream

      - name: Download DEB package
        uses: actions/download-artifact@v3
        with:
          name: app-ubuntu-latest
          path: ./artifacts/ubuntu

      - name: Upload RPM package to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu/*
          asset_name: OpenCore_v0.0.22.4-debian.deb
          asset_content_type: application/octet-stream
