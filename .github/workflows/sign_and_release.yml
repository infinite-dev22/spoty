name: Build and Package with jpackage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK 17 (required for jpackage)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      # Build the project using Gradle
      - name: Build core project with Gradle
        run: ./gradlew :core:clean :core:build

      # Run jpackage for platform-specific build
      - name: Package with jpackage for Linux or macOS
        if: runner.os != 'Windows'
        run: |
          if [ $RUNNER_OS == "Linux" ]; then
            ./gradlew :core:jpackage --args="--installer-type deb"
          elif [ $RUNNER_OS == "macOS" ]; then
            ./gradlew :core:jpackage --args="--installer-type pkg"
          fi

      - name: Package with jpackage for Windows
        if: runner.os == 'Windows'
        run: ./gradlew :core:jpackage --args="--installer-type exe"

      # Code sign the Windows executables
      - name: Code signing for Windows
        if: runner.os == 'Windows'
        run: |
          signtool sign /f ${{ secrets.CERTIFICATE_PFX }} /p ${{ secrets.CERTIFICATE_PASSWORD }} /tr http://timestamp.digicert.com /td sha256 /fd sha256 "core/build/jpackage/*.exe"

      # Upload artifact (signed or unsigned installers)
      - name: Upload signed or unsigned installers
        uses: actions/upload-artifact@v3
        with:
          name: installers-${{ runner.os }}
          path: core/build/jpackage
