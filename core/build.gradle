plugins {
    id "java"
    id "org.javamodularity.moduleplugin" version "$modulePlugin"
    id "application"
    id "org.openjfx.javafxplugin" version "$jfxPlugin"
    id "org.beryx.jlink" version "$jlink"
//    id "org.graalvm.buildtools.native" version "$nativeBuildTool"
    id "io.freefair.lombok" version "$lombokPlugin"
    id "com.github.mrcjkb.module-finder" version "0.0.7"
    id "com.gluonhq.gluonfx-gradle-plugin" version "1.0.22"
}

apply plugin: "java"

project.description = "OpenSale ERP - Fintech Software."
project.ext.buildDate = LocalDate.now()
project.version = "$spoty"

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url "https://jitpack.io" }
    maven {
        url "https://sandec.jfrog.io/artifactory/repo"
    }
}

//graalvmNative {
//    binaries.configureEach {
//        resources.autodetect()
//    }
//}

gluonfx {
    target = "$target"
//    verbose = false
//    enableSwRendering = false
    graalvmHome="/home/infinite/.sdkman/candidates/java/21.0.2-graalce"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

application {
    mainModule = "spoty.core"
    mainClass = "inc.nomard.spoty.core.Main"
}

mainClassName = 'inc.nomard.spoty.core.Main'

test {
    useJUnitPlatform()
//    jvmArgs '-agentlib:native-image-agent=access-filter-file=access-filter.json,config-output-dir=target/classes/META-INF/native-image'
}

run {
    jvmArgs = [
            "-XX:NewRatio=1",
            "-Xms256m",
            "-Xmx1G",
            "-XX:ReservedCodeCacheSize=512m",
            "-XX:+UseG1GC",
            "-XX:SoftRefLRUPolicyMSPerMB=50",
            "-XX:CICompilerCount=2",
            "-XX:+HeapDumpOnOutOfMemoryError",
            "-Dsun.io.useCanonCaches=false",
            "-Djbr.catch.SIGABRT=true",
            "-Djdk.attach.allowAttachSelf=true",
//            "-agentlib:native-image-agent=config-output-dir=target/classes/META-INF/native-image",
            "--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED",
    ]
}

jar {
    manifest {
        attributes(
                "Main-Class": "inc.nomard.spoty.Main"
        )
    }
}

jlink {
    addExtraDependencies(
            "javafx",
            "jakarta.inject",
            "org.jetbrains.annotations",
            "com.dlsc.gemsfx:gemsfx",
            "eu.hansolo.fx:charts",
            "com.calendarfx:view",
            ":utils"
    )
    options = ["--strip-debug", "--no-header-files", "--no-man-pages"]
    launcher {
        name = "OpenSale ERP"
        jvmArgs = [
                "-XX:NewRatio=1",
                "-Xms256m",
                "-Xmx1G",
                "-XX:ReservedCodeCacheSize=512m",
                "-XX:+UseG1GC",
                "-XX:SoftRefLRUPolicyMSPerMB=50",
                "-XX:CICompilerCount=2",
                "-XX:+HeapDumpOnOutOfMemoryError",
                "-Dsun.io.useCanonCaches=false",
                "-Djbr.catch.SIGABRT=true",
                "-Djdk.attach.allowAttachSelf=true",
                "-XX:ErrorFile=/home/infinite-dev/IdeaProjects/spoty/error%p.log",
//                "-agentlib:native-image-agent=config-output-dir=target/classes/META-INF/native-image",
                "--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED",
        ]
    }

    jpackage {
        installerOptions = [
                "--name", "OpenSale-ERP",
                "--description", project.description,
                "--app-version", project.version,
                "--copyright", "Copyright " + LocalDate.now().getYear() + " nomard inc.",
                "--vendor", "nomard inc.",
//                "--icon", "src/main/resources/icon.ico",
//                "--type", "msi",
//                 Windows Only
                "--win-dir-chooser",
                "--win-menu", "--win-shortcut",
                "--win-dir-chooser", "--win-menu",
                "--win-per-user-install", "--win-shortcut-prompt",
                /*"--win-console",*/ /*"--verbose"*/
        ]
    }
}

jlinkZip.doLast {
    doPackageAll
}

dependencies {
    implementation project(":network_bridge")
    implementation project(":utils")
    implementation "org.slf4j:slf4j-api:2.1.0-alpha1"
    implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
    implementation "javax.measure:unit-api:$measure_unit_api"
    implementation "com.dlsc.gemsfx:gemsfx:$gemsfx"
//    implementation "com.github.iAmGio:froxty:1.4.0"
    implementation "com.calendarfx:view:11.12.7"
    implementation "eu.hansolo.fx:charts:$fx_charts"
//    implementation "io.soabase.record-builder:record-builder-core:39"
    implementation "io.github.mkpaz:atlantafx-parent:2.0.1"
    implementation "io.github.mkpaz:atlantafx-styles:2.0.1"
    implementation "io.github.mkpaz:atlantafx-base:2.0.1"
    implementation "com.google.code.gson:gson:2.10.1"
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    implementation "org.projectlombok:lombok:$lombok"
    implementation "io.github.palexdev:materialfx:$materialfx"
    implementation "org.kordamp.ikonli:ikonli-javafx:$ikonLi"
    implementation "org.kordamp.ikonli:ikonli-core:$ikonLi"
    implementation "org.kordamp.ikonli:ikonli-fontawesome5-pack:$ikonLi"
    implementation "fr.brouillard.oss:cssfx:$cssfx"
    implementation "io.github.palexdev:virtualizedfx:$virtualizedFX" // update to version -> 21.1.0 breaks the system.
    implementation "io.github.palexdev:mfxcomponents:$mfxComponents"
    implementation "org.junit.jupiter:junit-jupiter-api:$junit"
    implementation "org.junit.jupiter:junit-jupiter-engine:$junit"
}
