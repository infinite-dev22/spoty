plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

project.description = "Zenmart ERP - Fintech Software."
project.ext.buildDate = new Date()
group 'org.infinite'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

application {
//    mainModule = 'org.infinite.spoty'
//    mainClass = 'org.infinite.spoty.App'
    setMainModule("org.infinite.spoty")
    String main = project.findProperty("chooseMain").toString()
    if (main != "null" && !main.trim().isEmpty()) {
        setMainClassName(main)
    } else {
        setMainClassName("org.infinite.spoty.App")
    }
    applicationDefaultJvmArgs = ["-Dglass.disableGrab=true"]
}

javafx {
    version = '20'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media', 'javafx.graphics']
}

dependencies {
    // Material FX.
    implementation 'io.github.palexdev:materialfx:11.16.0'
    // Icons.
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation "org.kordamp.ikonli:ikonli-core:12.3.1"
    implementation "org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1"
    // JDBC database drivers.
    implementation 'com.oracle.database.jdbc:ojdbc11-production:23.2.0.0'
    // DATABASE.
    // Hibernate.
    implementation 'org.hibernate:hibernate-core:5.3.29.Final'
    // Connector/Driver
    implementation 'org.xerial:sqlite-jdbc:3.41.2.1'
    // Hibernate Dialects
    implementation("com.github.gwenn:sqlite-dialect:0.1.2")
    // Persistance API
    implementation 'javax.persistence:javax.persistence-api:2.2'
    // JAXB XML Binding API
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    // JAXB XML Binding Runtime
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.0'
    // CSSFX.
    implementation "fr.brouillard.oss:cssfx:11.5.1"
    // Libraries for Material FX.
    implementation "io.github.palexdev:scenicview:17.0.2"
    implementation "io.github.palexdev:virtualizedfx:11.9.0"
    implementation "io.github.palexdev:mfxcomponents:11.16.2"
    // SLF4J Logger.
    implementation "org.slf4j:slf4j-simple:2.0.7"
    // FXML Compiler
    implementation "io.github.paullo612.mlfx.api:micronaut:0.6.1"
    // https://mvnrepository.com/artifact/com.sun.activation/javax.activation
    implementation group: 'com.sun.activation', name: 'javax.activation', version: '1.2.0'
    // JUnit test framework.
    implementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    implementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    def javaHome = System.properties.'java.home'
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    forceMerge 'istack', 'stax'

    mergedModule {
        requires 'java.logging'
        requires 'java.sql'
        requires 'jdk.jdi'
        requires 'java.rmi'
        requires 'java.xml'
        requires 'com.sun.xml.txw2'
        requires 'java.desktop'
        requires 'java.management'
        requires 'java.naming'
        requires 'jdk.attach'
        requires 'java.scripting'
        requires 'java.datatransfer'
        requires 'java.compiler'
        requires 'java.transaction.xa'
        requires 'com.sun.xml.fastinfoset'
        requires 'java.instrument'

        uses 'org.jboss.logging.LoggerProvider'
        uses 'javax.persistence.spi.PersistenceProvider'
        provides 'javax.persistence.spi.PersistenceProvider' with 'org.hibernate.jpa.HibernatePersistenceProvider'
    }
    launcher {
        name = 'spoty'
    }

    jpackage {
        installerOptions += '--verbose'
    }
    launcher {
        mainClass = "org.infinite.spoty.App"
        name = 'Zenmart ERP'
    }
    jpackage {
        imageOptions = ['--icon', 'src/main/resources/logo.png']
        installerOptions += [
                '--name', 'Zenmart ERP',
                '--app-version', version.replace('-', '.'),
                '--description', project.description,
                '--copyright', 'Copyrigth 2023 infinite Studios',
                '--vendor', 'infinite Studios'
        ]
        installerType = 'deb'
        if (installerType in ['deb', 'rpm']) {
            imageOptions += ['--icon', 'src/main/resources/logo.png']
            installerOptions += [
                    '--linux-menu-group', 'Work',
                    '--linux-shortcut'
            ]
        }
        if (installerType == 'deb') {
            installerOptions += [
                    '--linux-deb-maintainer', 'info@codecellar.com'
            ]
        }
    }

    targetPlatform("linux-x64") {
//        jdkHome = jdkDownload("https://cdn.azul.com/zulu/bin/zulu19.32.13-ca-jdk19.0.2-linux_x64.tar.gz")
        addExtraModulePath("/home/infinite/Java_FX/javafx-jmods-20/linux_x64")
    }

//    targetPlatform("win") {
//        jdkHome = jdkDownload("https://cdn.azul.com/zulu/bin/zulu19.32.13-ca-jdk19.0.2-win_x64.zip")
//        addExtraModulePath("/home/infinite/Java_FX/javafx-jmods-20/win_x64")
//    }

//    targetPlatform("mac") {
//        jdkHome = jdkDownload("https://cdn.azul.com/zulu/bin/zulu19.32.13-ca-jdk19.0.2-macosx_x64.tar.gz")
//        addExtraModulePath("/home/infinite/Java_FX/javafx-jmods-20/mac_x64")
//    }

    addExtraDependencies('javafx')
}

tasks.register('doPackageAll') {
    doLast {
        if (Os.isFamily(Os.FAMILY_UNIX)) {
            exec {
                mkdir("$buildDir/distributions")
                executable "$projectDir/scripts/JLinkPackage.sh"
                args = ["$buildDir"]
            }
        }
    }
}

jlinkZip.doLast {
    doPackageAll
}